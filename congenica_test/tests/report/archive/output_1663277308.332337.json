{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "driver = <appium.webdriver.webdriver.WebDriver (session=\"6e49c2b64dfa82c1cebea1a9e2edb07a3119e109\")>\n\n    @pytest.fixture(autouse=True, scope=\"session\")\n    def authorization(driver):  # TODO handle condition for import screens of android or ios\n        welcome_screen = WelcomeTutorialScreen(driver)\n        welcome_screen.skip_tutorial_button()\n        login_screen = LoginScreen(driver)\n        login_screen.click_to_login_btn()\n        login_screen.fill_phone_number()\n        login_screen.fill_password_field()\n        admin_page = AdminPage()\n        code = admin_page.get_activation_code(login_screen.LOGIN_PATIENT.phone)\n        login_screen.enter_sms_code(code)\n        login_screen.enter_login_pin()\n>       login_screen.skip_notifications()\n\n../conftest.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../src/screens/ios/login_screen.py:67: in skip_notifications\n    self.click_to_element(self.NOT_ALLOW)\n../src/helpers/app.py:50: in click_to_element\n    element.click()\n../../venv/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:80: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../venv/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:633: in _execute\n    return self._parent.execute(command, params)\n../../venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n../../venv/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:31: in check_response\n    raise wde\n../../venv/lib/python3.8/site-packages/appium/webdriver/errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x7f0d6407b2e0>\nresponse = {'status': 500, 'value': '{\"status\":10,\"value\":{\"message\":\"The previously found element \\\\\"\\\\\"Don\u2019t Allow\\\\\" Button\\\\\"...n)}\",\"sessionId\":\"6e49c2b64dfa82c1cebea1a9e2edb07a3119e109\"}},\"sessionId\":\"6e49c2b64dfa82c1cebea1a9e2edb07a3119e109\"}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: The previously found element \"\"Don\u2019t Allow\" Button\" is not present in the current view anymore. Make sure the application UI has the expected state. Original error: No matches found for Elements matching predicate 'wdName == \"Don\u2019t Allow\" AND (1 == 1 OR identifier == 0 OR frame == 0 OR value == 0 OR title == 0 OR label == 0 OR elementType == 0 OR enabled == 0 OR placeholderValue == 0 OR selected == 0)' from input {(\nE           Window, {{0.0, 0.0}, {390.0, 844.0}},\nE           Window, {{0.0, 0.0}, {390.0, 844.0}},\nE           Window, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Window, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Window, {{0.0, 0.0}, {390.0, 844.0}}, identifier: 'SBSwitcherWindow',\nE           Window, {{0.0, 0.0}, {390.0, 844.0}},\nE           Window, {{0.0, 0.0}, {390.0, 844.0}},\nE           Window, {{0.0, 0.0}, {390.0, 844.0}},\nE           Window, {{0.0, 0.0}, {390.0, 844.0}},\nE           Window, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           StatusBar, {{0.0, 0.0}, {390.0, 47.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 844.0}, {390.0, 233.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           Other, {{0.0, 0.0}, {1170.0, 2532.0}},\nE           ScrollView, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}}, identifier: 'AppSwitcherContentView',\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}}, identifier: 'card:ru.medsi.smartmed.dev:sceneID:ru.medsi.smartmed.dev-default', label: 'SmartMed Dev',\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           ScrollView, {{0.0, -422.0}, {390.0, 1266.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}}, identifier: 'Home Grabber',\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{125.7, 831.0}, {139.0, 5.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           Other, {{0.0, 0.0}, {390.0, 844.0}},\nE           StatusBar, {{0.0, 0.0}, {390.0, 47.0}},\nE           Other, {{0.0, 0.0}, {390.0, 47.0}},\nE           Other, {{0.0, 0.0}, {390.0, 47.0}},\nE           Button, {{32.7, 10.7}, {66.7, 23.0}}, label: 'Screen recording in progress, 21:24',\nE           StaticText, {{46.3, 13.3}, {39.3, 18.0}}, label: '21:24',\nE           Other, {{311.0, 19.7}, {19.3, 12.3}}, label: 'Mobile Data', value: No signal,\nE           Other, {{336.3, 19.3}, {27.3, 13.0}}, label: '100% battery power', value: Charging\nE       )}\n\n../../venv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:242: StaleElementReferenceException\n", "test_name": "test_appointment_online", "rerun": "0"}}, "suite_name": "tests/test_appointment_online.py"}}}, "date": "September 16, 2022", "start_time": 1663277017.2125103, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}