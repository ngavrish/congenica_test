{"data": [{"type": "report", "id": 1, "attributes": {"environment": {"Python": "3.8.10", "Platform": "Linux-5.15.0-46-generic-x86_64-with-glibc2.29"}, "summary": {"failed": 2, "num_tests": 2, "duration": 144.15132117271423}, "created_at": "2022-09-16 21:04:47.097458"}, "relationships": {"tests": {"data": [{"id": 1, "type": "test"}, {"id": 2, "type": "test"}]}}}], "included": [{"id": 1, "type": "test", "attributes": {"name": "tests/test_appointment_online.py::TestAppointmentOnline::test_appointment_online", "duration": 223.7904261410149, "run_index": 0, "setup": {"name": "setup", "duration": 101.32047889000387, "outcome": "passed", "log": "\u001b[32mINFO    \u001b[0m logger:conftest.py:43 Driver session setup\n\u001b[32mINFO    \u001b[0m logger:conftest.py:44 Configuring desired capabilities\n\u001b[32mINFO    \u001b[0m logger:conftest.py:46 Initiating Appium driver\n\u001b[32mINFO    \u001b[0m logger:conftest.py:55 Driver setup success"}, "call": {"name": "call", "duration": 13.804808417000459, "outcome": "failed", "longrepr": "self = <tests.test_appointment_online.TestAppointmentOnline object at 0x7fd3e4d0ba30>, driver = <appium.webdriver.webdriver.WebDriver (session=\"3546fd42b0559f0b616709f02db44df36e28e8a0\")>\n\n    def test_appointment_online(self, driver):\n        home_screen = HomeScreen(driver)\n>       home_screen.skip_notifications_2()\n\ntest_appointment_online.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../src/screens/ios/home.py:40: in skip_notifications_2\n    self.click_to_element(self.notification)\n../src/helpers/app.py:49: in click_to_element\n    element = self.find_element(locator)\n../src/helpers/app.py:37: in find_element\n    element = WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3546fd42b0559f0b616709f02db44df36e28e8a0\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd3e4d11ca0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "teardown": {"name": "teardown", "duration": 7.3446599440067075, "outcome": "passed"}, "outcome": "failed"}}, {"id": 2, "type": "test", "attributes": {"name": "tests/test_appointment_online.py::TestAppointmentOnline::test_another_appointment_online", "duration": 21.575484172004508, "run_index": 1, "setup": {"name": "setup", "duration": 0.0007134320039767772, "outcome": "passed"}, "call": {"name": "call", "duration": 12.473004694998963, "outcome": "failed", "longrepr": "self = <tests.test_appointment_online.TestAppointmentOnline object at 0x7fd3e4d0b790>, driver = <appium.webdriver.webdriver.WebDriver (session=\"3546fd42b0559f0b616709f02db44df36e28e8a0\")>\n\n    def test_another_appointment_online(self, driver):\n        home_screen = HomeScreen(driver)\n>       home_screen.skip_notifications_2()\n\ntest_appointment_online.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../src/screens/ios/home.py:40: in skip_notifications_2\n    self.click_to_element(self.notification)\n../src/helpers/app.py:49: in click_to_element\n    element = self.find_element(locator)\n../src/helpers/app.py:37: in find_element\n    element = WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3546fd42b0559f0b616709f02db44df36e28e8a0\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd3e43d70d0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "teardown": {"name": "teardown", "duration": 9.101052612997591, "outcome": "passed", "log": "\u001b[32mINFO    \u001b[0m logger:conftest.py:69 driver quit"}, "outcome": "failed"}}]}